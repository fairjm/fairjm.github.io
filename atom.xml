<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>小麦的杂货铺</title>
  <icon>https://bingowith.me/icon.png</icon>
  <subtitle>日常随笔~</subtitle>
  <link href="https://bingowith.me/atom.xml" rel="self"/>
  
  <link href="https://bingowith.me/"/>
  <updated>2025-08-13T20:45:00.000Z</updated>
  <id>https://bingowith.me/</id>
  
  <author>
    <name>abaabaqua</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>timestamp存取差几小时? mysql timestamp的timezone问题以及如何在mysql2设置</title>
    <link href="https://bingowith.me/2025/08/14/nodejs-mysql-timezone-problem/"/>
    <id>https://bingowith.me/2025/08/14/nodejs-mysql-timezone-problem/</id>
    <published>2025-08-13T20:45:00.000Z</published>
    <updated>2025-08-13T20:45:00.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;在 Node.js 应用中使用 MySQL 时，时间戳（TIMESTAMP）字段出现的“8 小时差异”是一个经典难题。这个问题的根源并非单一因素，而是由 MySQL 自身的时区机制、mysql2 驱动的特定行为，以及一个极具迷惑性的默认配置共同造成的。&lt;/p&gt;
&lt;p&gt;本文将澄清 MySQL TIMESTAMP 的存储与转换原理，并深入剖析 mysql2 驱动中 timezone 配置项的真正含义及其默认值&lt;code&gt;&amp;#39;local&amp;#39;&lt;/code&gt;所带来的陷阱，最终提供两套清晰的最佳实践方案。&lt;/p&gt;</summary>
    
    
    
    
    <category term="javascript" scheme="https://bingowith.me/tags/javascript/"/>
    
    <category term="mysql" scheme="https://bingowith.me/tags/mysql/"/>
    
    <category term="nodejs" scheme="https://bingowith.me/tags/nodejs/"/>
    
    <category term="timestamp" scheme="https://bingowith.me/tags/timestamp/"/>
    
    <category term="timezone" scheme="https://bingowith.me/tags/timezone/"/>
    
  </entry>
  
  <entry>
    <title>drizzle如何处理mysql的bit类型</title>
    <link href="https://bingowith.me/2025/08/02/drizzle-mysql-bit-type/"/>
    <id>https://bingowith.me/2025/08/02/drizzle-mysql-bit-type/</id>
    <published>2025-08-02T12:25:00.000Z</published>
    <updated>2025-08-02T12:25:00.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;mysql 的 boolean 类型其实是 tinyint(1)的别名，一些 ORM 工具无法识别把他识别到对应语言的 boolean 类型，日常实践有时候会选择用&lt;code&gt;bit(1)&lt;/code&gt;这个类型，比如&lt;code&gt;java&lt;/code&gt;的&lt;code&gt;JOOQ&lt;/code&gt;，boolean 类型会变为 java 的&lt;code&gt;Byte&lt;/code&gt;，而&lt;code&gt;bit(1)&lt;/code&gt;则是 java 的&lt;code&gt;Boolean&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;但是 drizzle 的 mysql 内置类型中没有&lt;code&gt;bit(1)&lt;/code&gt;。你用他的&lt;code&gt;drizzle-kit pull&lt;/code&gt;之后会返回这个结果：&lt;/p&gt;
&lt;figure class=&quot;highlight plaintext&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;// Warning: Can&amp;#x27;t parse bit(1) from database&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;// bit(1)Type: bit(1)(&amp;quot;deleted&amp;quot;).notNull(),&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;但是如果是已经建好的表，其他逻辑在用的话，把&lt;code&gt;bit(1)&lt;/code&gt;改成&lt;code&gt;boolean&lt;/code&gt;并不方便。&lt;/p&gt;
&lt;p&gt;需要我们自己定义一个类型。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;bit(1)&lt;/code&gt;这个类型不同驱动返回不同，有些可能是作为整数，有些可能是作为 Buffer。所以扩展一下就行：&lt;/p&gt;</summary>
    
    
    
    
    <category term="drizzle" scheme="https://bingowith.me/tags/drizzle/"/>
    
    <category term="javascript" scheme="https://bingowith.me/tags/javascript/"/>
    
    <category term="mysql" scheme="https://bingowith.me/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Next.js 如何在客户端导航时获取上一页(referer)</title>
    <link href="https://bingowith.me/2025/07/17/nextjs-client-navigation-get-previous-page/"/>
    <id>https://bingowith.me/2025/07/17/nextjs-client-navigation-get-previous-page/</id>
    <published>2025-07-16T16:00:00.000Z</published>
    <updated>2025-07-16T16:00:00.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;想给之前上线的工具站做个博客数据统计: &lt;a href=&quot;https://merchmindai.net/blog/zh/1&quot;&gt;blogs&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;理所当然用到了&lt;code&gt;document.referer&lt;/code&gt;，最方便的获取上一个页面的方式，结果发现获取到的都是第一次 load 的页面，而不是导航前的那个页面。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;为什么会这样？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;Next.js 在生产环境中默认采用前端导航（&lt;code&gt;Client-side Navigation&lt;/code&gt;）的方式。这意味着页面加载完之后，在网站内部点击链接时，浏览器并不会执行一次完整的页面刷新。相反，Next.js 会在客户端通过 JavaScript 异步加载新页面的数据和组件，然后更新 DOM。&lt;/p&gt;
&lt;p&gt;这种类似 &lt;strong&gt;单页应用（SPA）&lt;/strong&gt; 的行为导致了一个关键问题：&lt;br&gt;&lt;code&gt;document.referrer&lt;/code&gt; 的值在页面首次加载后保持不变。当通过内部链接从&lt;code&gt;blog/zh/1&lt;/code&gt;导航到 &lt;code&gt;blog/zh/post/[slug]&lt;/code&gt; 时，由于没有发生完整的页面重载，&lt;code&gt;document.referrer&lt;/code&gt; 的值仍然会是最初访问网站的那个值，而不是&lt;code&gt;blog/zh/1&lt;/code&gt;。&lt;/p&gt;</summary>
    
    
    
    
    <category term="nextjs" scheme="https://bingowith.me/tags/nextjs/"/>
    
    <category term="SPA" scheme="https://bingowith.me/tags/SPA/"/>
    
  </entry>
  
  <entry>
    <title>Next.js RSC _rsc参数丢失的那些坑以及解决方案</title>
    <link href="https://bingowith.me/2025/06/25/nextjs-lose-rsc-params-and-head/"/>
    <id>https://bingowith.me/2025/06/25/nextjs-lose-rsc-params-and-head/</id>
    <published>2025-06-24T17:35:00.000Z</published>
    <updated>2025-06-24T17:35:00.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近在用 Next.js 的 RSC（React Server Component）时遇到了一个比较隐晦的问题，记录一下踩坑过程和应对方案。&lt;/p&gt;
&lt;p&gt;如果你在项目里既使用了 CDN（并且缓存了 html），又使用了&lt;code&gt;middleware&lt;/code&gt;的重定向（middleware 会处理 rsc 请求），又用了 RSC 特性（开启了 prefetch 等情况），如果你发现部分页面 html 变成了一大串“乱码”（其实是 rsc 请求的返回结果），可以仔细看看。&lt;/p&gt;
&lt;h2 id=&quot;RSC-请求是怎么工作的？&quot;&gt;&lt;a href=&quot;#RSC-请求是怎么工作的？&quot; class=&quot;headerlink&quot; title=&quot;RSC 请求是怎么工作的？&quot;&gt;&lt;/a&gt;RSC 请求是怎么工作的？&lt;/h2&gt;&lt;p&gt;Next.js 在请求 RSC 和 HTML 页面时，路径和方法其实是一样的，唯一的区别在于它会带上一个 &lt;code&gt;_rsc&lt;/code&gt; 的参数和一些特定 header。&lt;/p&gt;
&lt;p&gt;比如你访问页面 &lt;code&gt;/about&lt;/code&gt;：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;HTML 请求&lt;/strong&gt;：&lt;br&gt;&lt;code&gt;GET /about&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RSC 请求&lt;/strong&gt;：&lt;br&gt;&lt;code&gt;GET /about?_rsc=&amp;lt;随机字符串&amp;gt;&lt;/code&gt; 以及特定的 header&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里的 &lt;code&gt;_rsc&lt;/code&gt; 参数是 Next.js 内部用来标识“这是一次 RSC 请求”，header 里也有类似 &lt;code&gt;Next-Router-State-Tree&lt;/code&gt;, &lt;code&gt;rsc&lt;/code&gt; 等用于数据请求和分割的内容。&lt;/p&gt;</summary>
    
    
    
    
    <category term="nextjs" scheme="https://bingowith.me/tags/nextjs/"/>
    
    <category term="nginx" scheme="https://bingowith.me/tags/nginx/"/>
    
    <category term="CDN" scheme="https://bingowith.me/tags/CDN/"/>
    
    <category term="RSC" scheme="https://bingowith.me/tags/RSC/"/>
    
  </entry>
  
  <entry>
    <title>[翻译]我如何使用 Claude Code</title>
    <link href="https://bingowith.me/2025/06/17/how-i-use-claude-code/"/>
    <id>https://bingowith.me/2025/06/17/how-i-use-claude-code/</id>
    <published>2025-06-16T16:54:00.000Z</published>
    <updated>2025-06-16T16:54:00.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;&lt;strong&gt;原文出处:&lt;/strong&gt; &lt;a href=&quot;https://spiess.dev/blog/how-i-use-claude-code&quot;&gt;https://spiess.dev/blog/how-i-use-claude-code&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;一个月前，我订阅了 Claude Max。在此之前，我已经使用包括 Claude Code 在内的 AI 代理一段时间了，但随着统一价格的推出，我的使用量猛增，它已成为我许多任务的日常驱动力。我发现自己现在去 VS Code 的次数少了很多。&lt;/p&gt;
&lt;p&gt;由于 AI 代理目前对每个人来说都是新事物，我想分享一些我最近注意到模式可能会很有趣。以下是我如何使用 Claude code。&lt;/p&gt;
&lt;h2 id=&quot;开始新对话-Start-New-Threads&quot;&gt;&lt;a href=&quot;#开始新对话-Start-New-Threads&quot; class=&quot;headerlink&quot; title=&quot;开始新对话 (Start New Threads)&quot;&gt;&lt;/a&gt;开始新对话 (Start New Threads)&lt;/h2&gt;&lt;p&gt;如果说我希望你从这篇文章中学到一件事，那就是你应该更频繁地调用 &lt;code&gt;/clear&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;AI 代理往往随着对话时间的延长而变得更不可预测。当你提出不同问题时尤其如此。我发现即使这意味着重复一些指令，创建一个新的提示通常会更有效。&lt;/p&gt;
&lt;p&gt;一旦我开始更积极地这样做，我的结果就显著改善了。而且我绝对不是唯一一个提出这个建议的人。&lt;/p&gt;</summary>
    
    
    
    
    <category term="llm" scheme="https://bingowith.me/tags/llm/"/>
    
    <category term="claude" scheme="https://bingowith.me/tags/claude/"/>
    
  </entry>
  
  <entry>
    <title>Next.js使用filerobot-image-editor</title>
    <link href="https://bingowith.me/2025/05/18/nextjs-filerobot-image-editor/"/>
    <id>https://bingowith.me/2025/05/18/nextjs-filerobot-image-editor/</id>
    <published>2025-05-18T09:44:00.000Z</published>
    <updated>2025-05-18T09:44:00.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;想在工具站里集成一下图片编辑工具，找了一圈发现&lt;a href=&quot;https://github.com/scaleflex/filerobot-image-editor&quot;&gt;filerobot-image-editor&lt;/a&gt;相当不错。&lt;/p&gt;
&lt;p&gt;按照&lt;code&gt;nextjs&lt;/code&gt;的官方文档来的，什么 lazy, dymanic 都用上了，还是嗝屁了，最后还是直接用 cdn js+浏览器端 js 解决不把模块引入了, 记录一下解法。&lt;/p&gt;
&lt;p&gt;最后的效果见: &lt;a href=&quot;https://merchmindai.net/tools/image-editor?from=dev-blog&quot;&gt;Image Editor | merchmindai&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="nextjs" scheme="https://bingowith.me/tags/nextjs/"/>
    
    <category term="filerobot-image-editor" scheme="https://bingowith.me/tags/filerobot-image-editor/"/>
    
    <category term="CSR" scheme="https://bingowith.me/tags/CSR/"/>
    
  </entry>
  
  <entry>
    <title>Next.js使用auth.js+dirzzle+postgresql报错分析</title>
    <link href="https://bingowith.me/2025/03/20/nextjs-auth-dirzzle-postgresql-error/"/>
    <id>https://bingowith.me/2025/03/20/nextjs-auth-dirzzle-postgresql-error/</id>
    <published>2025-03-20T02:23:00.000Z</published>
    <updated>2025-03-20T02:23:00.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;在自己的测试项目里想着做登录功能，看到&lt;code&gt;authjs&lt;/code&gt;就接到项目里去，本身就使用的&lt;code&gt;drizzle&lt;/code&gt;，在不配置 db adapter 的情况下运行正常，但只要配置就会报错:&lt;/p&gt;
&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;⨯ Error [TypeError]: Cannot read properties of undefined (reading &amp;#x27;reduce&amp;#x27;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   at &amp;lt;unknown&amp;gt; (.next&#92;server&#92;edge&#92;chunks&#92;edge-wrapper_c7ecd8c0.js:709:27)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   at runModuleExecutionHooks (.next&#92;server&#92;edge&#92;chunks&#92;edge-wrapper_c7ecd8c0.js:755:9)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   at instantiateModule (.next&#92;server&#92;edge&#92;chunks&#92;edge-wrapper_c7ecd8c0.js:707:9)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   at getOrInstantiateModuleFromParent (.next&#92;server&#92;edge&#92;chunks&#92;edge-wrapper_c7ecd8c0.js:640:12)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   at esmImport (.next&#92;server&#92;edge&#92;chunks&#92;edge-wrapper_c7ecd8c0.js:143:20)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   at [project]/src/db/db.ts [middleware-edge] (ecmascript) (.next&#92;server&#92;edge&#92;chunks&#92;[root of the server]__a687996d._.js:28:218)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;   at &amp;lt;unknown&amp;gt; (.next&#92;server&#92;edge&#92;chunks&#92;edge-wrapper_c7ecd8c0.js:709:27)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;无法启动&lt;/p&gt;</summary>
    
    
    
    
    <category term="drizzle" scheme="https://bingowith.me/tags/drizzle/"/>
    
    <category term="nextjs" scheme="https://bingowith.me/tags/nextjs/"/>
    
    <category term="js" scheme="https://bingowith.me/tags/js/"/>
    
    <category term="auth.js" scheme="https://bingowith.me/tags/auth-js/"/>
    
  </entry>
  
  <entry>
    <title>显卡的TOPS AI算力比较</title>
    <link href="https://bingowith.me/2025/01/19/gpu-ai-tops-tables/"/>
    <id>https://bingowith.me/2025/01/19/gpu-ai-tops-tables/</id>
    <published>2025-01-19T08:16:00.000Z</published>
    <updated>2025-01-19T08:16:00.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;虽然自己没设备但喜欢聊 😀，和别人讨论的时候经常要反复查，查询一下汇总，有可能填错了。。。到时候发现错误再订正吧。&lt;/p&gt;
&lt;p&gt;AMD 的没找到哪个表&amp;#x2F;文档里有算 TOPS 的…就不列了&lt;/p&gt;
&lt;h2 id=&quot;N-卡&quot;&gt;&lt;a href=&quot;#N-卡&quot; class=&quot;headerlink&quot; title=&quot;N 卡&quot;&gt;&lt;/a&gt;N 卡&lt;/h2&gt;&lt;p&gt;20 系到 40 系&lt;/p&gt;
&lt;h3 id=&quot;GeForce-RTX-20-系列&quot;&gt;&lt;a href=&quot;#GeForce-RTX-20-系列&quot; class=&quot;headerlink&quot; title=&quot;GeForce RTX 20 系列&quot;&gt;&lt;/a&gt;GeForce RTX 20 系列&lt;/h3&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;型号&lt;/th&gt;
&lt;th&gt;架构&lt;/th&gt;
&lt;th&gt;制程 (nm)&lt;/th&gt;
&lt;th&gt;显存大小&lt;/th&gt;
&lt;th&gt;显存类型&lt;/th&gt;
&lt;th&gt;显存位宽&lt;/th&gt;
&lt;th&gt;显存带宽 (GB&amp;#x2F;s)&lt;/th&gt;
&lt;th&gt;峰值单精度 (FP32)&lt;/th&gt;
&lt;th&gt;TOPS (AI)&lt;/th&gt;
&lt;th&gt;TDP (W)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;RTX 2080 Ti&lt;/td&gt;
&lt;td&gt;Turing&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;11GB&lt;/td&gt;
&lt;td&gt;GDDR6&lt;/td&gt;
&lt;td&gt;352-bit&lt;/td&gt;
&lt;td&gt;616&lt;/td&gt;
&lt;td&gt;13.45 TFLOPS&lt;/td&gt;
&lt;td&gt;114 TOPS&lt;/td&gt;
&lt;td&gt;260&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RTX 2080 Super&lt;/td&gt;
&lt;td&gt;Turing&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;8GB&lt;/td&gt;
&lt;td&gt;GDDR6&lt;/td&gt;
&lt;td&gt;256-bit&lt;/td&gt;
&lt;td&gt;496&lt;/td&gt;
&lt;td&gt;11.15 TFLOPS&lt;/td&gt;
&lt;td&gt;89 TOPS&lt;/td&gt;
&lt;td&gt;250&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RTX 2080&lt;/td&gt;
&lt;td&gt;Turing&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;8GB&lt;/td&gt;
&lt;td&gt;GDDR6&lt;/td&gt;
&lt;td&gt;256-bit&lt;/td&gt;
&lt;td&gt;448&lt;/td&gt;
&lt;td&gt;10.07 TFLOPS&lt;/td&gt;
&lt;td&gt;81 TOPS&lt;/td&gt;
&lt;td&gt;225&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RTX 2070 Super&lt;/td&gt;
&lt;td&gt;Turing&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;8GB&lt;/td&gt;
&lt;td&gt;GDDR6&lt;/td&gt;
&lt;td&gt;256-bit&lt;/td&gt;
&lt;td&gt;448&lt;/td&gt;
&lt;td&gt;9.06 TFLOPS&lt;/td&gt;
&lt;td&gt;72 TOPS&lt;/td&gt;
&lt;td&gt;215&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RTX 2070&lt;/td&gt;
&lt;td&gt;Turing&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;8GB&lt;/td&gt;
&lt;td&gt;GDDR6&lt;/td&gt;
&lt;td&gt;256-bit&lt;/td&gt;
&lt;td&gt;448&lt;/td&gt;
&lt;td&gt;7.47 TFLOPS&lt;/td&gt;
&lt;td&gt;65 TOPS&lt;/td&gt;
&lt;td&gt;175&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RTX 2060 Super&lt;/td&gt;
&lt;td&gt;Turing&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;8GB&lt;/td&gt;
&lt;td&gt;GDDR6&lt;/td&gt;
&lt;td&gt;256-bit&lt;/td&gt;
&lt;td&gt;448&lt;/td&gt;
&lt;td&gt;7.19 TFLOPS&lt;/td&gt;
&lt;td&gt;57 TOPS&lt;/td&gt;
&lt;td&gt;175&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;RTX 2060&lt;/td&gt;
&lt;td&gt;Turing&lt;/td&gt;
&lt;td&gt;12&lt;/td&gt;
&lt;td&gt;6GB&lt;/td&gt;
&lt;td&gt;GDDR6&lt;/td&gt;
&lt;td&gt;192-bit&lt;/td&gt;
&lt;td&gt;336&lt;/td&gt;
&lt;td&gt;6.45 TFLOPS&lt;/td&gt;
&lt;td&gt;52 TOPS&lt;/td&gt;
&lt;td&gt;160&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</summary>
    
    
    
    
    <category term="GPU" scheme="https://bingowith.me/tags/GPU/"/>
    
  </entry>
  
  <entry>
    <title>Jina ReaderLM v2 测试记录</title>
    <link href="https://bingowith.me/2025/01/16/jina-readerlm-v2-test/"/>
    <id>https://bingowith.me/2025/01/16/jina-readerlm-v2-test/</id>
    <published>2025-01-16T03:33:00.000Z</published>
    <updated>2025-01-16T03:33:00.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;jina 出了 ReaderLM v2 版本，这个版本的 ReaderLM 在处理文本数据时更加高效和准确。&lt;br&gt;之前简单测试了下 v1, 结论是:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;幻觉严重, 尤其特别喜欢造 url&lt;/li&gt;
&lt;li&gt;很容易触发无限生成 比如 example1 example2…. 一直生成下去&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第一眼就是不可用就没继续了。&lt;br&gt;这次 v2 来了，测试了一下，幻觉问题好了很多，无限生成测试了几个也没遇到，但最为一个 html 转 markdown 的工具还是不够稳定。&lt;br&gt;这里的稳定性主要是指，与传统的基于语法树解析的工具相比，它在处理速度和结构识别的准确性上还有差距。他的确能生成不错的 markdown，但是很容易被正确结构但是内容文本里有特殊构造的&amp;#x2F;或者有一些语法错误的 html 页面所影响。&lt;/p&gt;
&lt;p&gt;注意：这个博客里的测试只是为了列出 v2 的一些问题，针对问题进行特殊构造的测试，实际网页可能也遇不到文中提到的问题，具体以实际场景为准了。&lt;br&gt;顺道一提，这个模型是以 CC 协议发布的，所以商用场景需要遵守相关协议。&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
  <entry>
    <title>聊一聊AWS Route 53的托管区</title>
    <link href="https://bingowith.me/2025/01/14/aws-route-53-hosted-zones-features-pitfalls-migration-tips/"/>
    <id>https://bingowith.me/2025/01/14/aws-route-53-hosted-zones-features-pitfalls-migration-tips/</id>
    <published>2025-01-13T17:50:00.000Z</published>
    <updated>2025-01-14T03:52:00.000Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;AWS-坑爹啊&quot;&gt;&lt;a href=&quot;#AWS-坑爹啊&quot; class=&quot;headerlink&quot; title=&quot;AWS 坑爹啊&quot;&gt;&lt;/a&gt;AWS 坑爹啊&lt;/h2&gt;&lt;p&gt;最近查看 AWS 的账单才发现，在 route53 买的每个域名每个月都会额外收 0.5 刀，并且还有解析费，一看是因为用了托管区（hosted zone）,这个收费是托管区的。&lt;/p&gt;
&lt;p&gt;这个托管区的作用其实就是 DNS 管理，emmmmm….那可不得不迁移到赛博大善人 Cloudflare 了。&lt;/p&gt;
&lt;p&gt;这里记录一些遇到的问题吧，并把一些概念阐述下。&lt;/p&gt;</summary>
    
    
    
    
    <category term="aws" scheme="https://bingowith.me/tags/aws/"/>
    
    <category term="cloudflare" scheme="https://bingowith.me/tags/cloudflare/"/>
    
    <category term="route53" scheme="https://bingowith.me/tags/route53/"/>
    
  </entry>
  
  <entry>
    <title>在remix中谨慎使用useFetcher进行poll</title>
    <link href="https://bingowith.me/2024/12/13/cautious-use-of-usefetcher-polling-in-remix/"/>
    <id>https://bingowith.me/2024/12/13/cautious-use-of-usefetcher-polling-in-remix/</id>
    <published>2024-12-12T18:18:00.000Z</published>
    <updated>2024-12-13T03:52:00.000Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;问题概述&quot;&gt;&lt;a href=&quot;#问题概述&quot; class=&quot;headerlink&quot; title=&quot;问题概述&quot;&gt;&lt;/a&gt;问题概述&lt;/h2&gt;&lt;p&gt;今天在开发时遇到了一个有趣的问题。我在实现一个异步任务提交和状态轮询的功能时，使用了两个 useFetcher：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;第一个 fetcher 用于任务提交，使用 submit 方法（这样可以触发页面 credit 的自动刷新）&lt;/li&gt;
&lt;li&gt;第二个 fetcher 用于状态轮询，使用 load 方法（因为不需要页面刷新数据）&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;结果发现了一个奇怪的现象：第一个任务能正常工作，但提交第二个任务后，轮询返回的却始终是第一个任务的数据, 后面也是返回的永远是第一个任务的结果.&lt;/p&gt;</summary>
    
    
    
    
    <category term="react" scheme="https://bingowith.me/tags/react/"/>
    
    <category term="remix" scheme="https://bingowith.me/tags/remix/"/>
    
  </entry>
  
  <entry>
    <title>Spring Boot Docker优雅关机总结</title>
    <link href="https://bingowith.me/2024/12/04/spring-boot-docker-graceful-shutdown-guide/"/>
    <id>https://bingowith.me/2024/12/04/spring-boot-docker-graceful-shutdown-guide/</id>
    <published>2024-12-04T04:50:00.000Z</published>
    <updated>2024-12-04T04:50:00.000Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;1-问题背景&quot;&gt;&lt;a href=&quot;#1-问题背景&quot; class=&quot;headerlink&quot; title=&quot;1. 问题背景&quot;&gt;&lt;/a&gt;1. 问题背景&lt;/h2&gt;&lt;p&gt;在 Docker 环境中运行 Spring Boot 应用时，为了确保应用能够优雅关机（Graceful Shutdown），需要正确配置多个组件。错误的配置可能导致应用无法正常接收关闭信号，从而无法执行优雅关机流程。&lt;/p&gt;
&lt;p&gt;今天才发现服务器上配置有问题没支持, 本地是没问题的。。。最后发现是配置有问题, 这里总结一下。&lt;/p&gt;
&lt;p&gt;日志中出现&lt;code&gt;INFO  o.s.b.w.e.tomcat.GracefulShutdown - Commencing graceful shutdown. Waiting for active requests to complete&lt;/code&gt;表示成功(我使用的是 tomcat 容器, 其他的日志内容可能不太一样)。&lt;/p&gt;
&lt;h2 id=&quot;2-Docker-关机流程&quot;&gt;&lt;a href=&quot;#2-Docker-关机流程&quot; class=&quot;headerlink&quot; title=&quot;2. Docker 关机流程&quot;&gt;&lt;/a&gt;2. Docker 关机流程&lt;/h2&gt;&lt;p&gt;Docker 容器的关闭过程如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;Docker 向容器的 1 号进程（PID 1）发送 SIGTERM 信号&lt;/li&gt;
&lt;li&gt;等待 &lt;code&gt;stop_grace_period&lt;/code&gt; 时间（默认 10 秒）&lt;/li&gt;
&lt;li&gt;如果进程还未退出，发送 SIGKILL 信号强制终止&lt;/li&gt;
&lt;/ol&gt;
&lt;h2 id=&quot;3-常见配置错误&quot;&gt;&lt;a href=&quot;#3-常见配置错误&quot; class=&quot;headerlink&quot; title=&quot;3. 常见配置错误&quot;&gt;&lt;/a&gt;3. 常见配置错误&lt;/h2&gt;</summary>
    
    
    
    
    <category term="java" scheme="https://bingowith.me/tags/java/"/>
    
    <category term="docker" scheme="https://bingowith.me/tags/docker/"/>
    
    <category term="spring boot" scheme="https://bingowith.me/tags/spring-boot/"/>
    
  </entry>
  
  <entry>
    <title>shopify CLI国内开发配置</title>
    <link href="https://bingowith.me/2024/09/22/shopify-cli-china-development-setup/"/>
    <id>https://bingowith.me/2024/09/22/shopify-cli-china-development-setup/</id>
    <published>2024-09-22T06:01:00.000Z</published>
    <updated>2025-05-18T09:38:00.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;Shopify CLI 是开发 Shopify 应用和主题的重要工具,但在中国等网络受限地区使用时常遇到困难。&lt;br&gt;官方仓库有一些 issue 都提到了这些问题, 但是官方一直没有加对应的配置。&lt;br&gt;比如: &lt;a href=&quot;https://github.com/Shopify/cli/issues/3225&quot;&gt;[Bug]: Execute Shopify theme dev with error message: request to xxx.theme.json?xxx processing failed, reason: read ETIMEDOUT&lt;/a&gt;&lt;br&gt;本文将指导你如何正确配置 Shopify CLI,以便在中国顺利进行 Shopify 开发。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;2025&amp;#x2F;05&amp;#x2F;18 更新 官方已经加入了 proxy 参数&lt;br&gt;参考: &lt;a href=&quot;https://github.com/Shopify/cli/blob/d0bbf05c28e22ad8b4ba17767bf7aff28ac71ddc/RELEASE_NOTES/3.78.md?plain=1#L2&quot;&gt;Release Note 3.78&lt;/a&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Add HTTP proxy support with the environment variables &lt;code&gt;SHOPIFY_HTTP_PROXY&lt;/code&gt; and &lt;code&gt;SHOPIFY_HTTPS_PROXY&lt;/code&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&quot;主要问题&quot;&gt;&lt;a href=&quot;#主要问题&quot; class=&quot;headerlink&quot; title=&quot;主要问题&quot;&gt;&lt;/a&gt;主要问题&lt;/h2&gt;&lt;ol&gt;
&lt;li&gt;Shopify CLI 默认不支持配置代理&lt;/li&gt;
&lt;li&gt;不读取系统环境变量&lt;/li&gt;
&lt;li&gt;内置的 Cloudflare tunneling 在中国连接不稳定&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;本指南基于 Shopify CLI 3.67.1 版本。&lt;/p&gt;</summary>
    
    
    
    
    <category term="nodejs" scheme="https://bingowith.me/tags/nodejs/"/>
    
    <category term="shopify" scheme="https://bingowith.me/tags/shopify/"/>
    
    <category term="shopify CLI" scheme="https://bingowith.me/tags/shopify-CLI/"/>
    
  </entry>
  
  <entry>
    <title>react native的expo router安卓下modal不生效的解法</title>
    <link href="https://bingowith.me/2024/06/19/react-native-expo-router-android-modal-not-working-solution/"/>
    <id>https://bingowith.me/2024/06/19/react-native-expo-router-android-modal-not-working-solution/</id>
    <published>2024-06-19T05:33:00.000Z</published>
    <updated>2024-06-19T05:33:00.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;最近跟着教程学&lt;code&gt;react native&lt;/code&gt;,教程使用的是iOS,而我在windows下开发用的安卓真机,除了一些样式上的区别大体的功能差不多.&lt;br&gt;但路由的&lt;code&gt;modal&lt;/code&gt;显示不一样感觉观感差的有点多.&lt;br&gt;这是因为安卓原生是没有iOS那种modal的路由的,&lt;code&gt;expo router&lt;/code&gt;使用的是&lt;code&gt;react navigation&lt;/code&gt;的&lt;code&gt;native stack&lt;/code&gt;,这个设置项在安卓下没有效果.&lt;/p&gt;</summary>
    
    
    
    
    <category term="react native" scheme="https://bingowith.me/tags/react-native/"/>
    
    <category term="expo router" scheme="https://bingowith.me/tags/expo-router/"/>
    
  </entry>
  
  <entry>
    <title>AWS安装cloudwatch agent后没有指标出现解决</title>
    <link href="https://bingowith.me/2024/06/05/aws_cloudwatch_agent_no_metric/"/>
    <id>https://bingowith.me/2024/06/05/aws_cloudwatch_agent_no_metric/</id>
    <published>2024-06-05T05:10:00.000Z</published>
    <updated>2024-06-05T05:10:00.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;EC2的指标没有内存相关,而内存是个很重要的指标,要在cloudwatch中监控需要使用cloudwatch agent(CWAgent), 照着官方文档做结果发现没有指标… 最后发现文档里少说了一步&lt;/p&gt;</summary>
    
    
    
    
    <category term="aws" scheme="https://bingowith.me/tags/aws/"/>
    
  </entry>
  
  <entry>
    <title>使用Azure openai java SDK序列化/反序列化message</title>
    <link href="https://bingowith.me/2024/06/04/azure-openai-java-sdk-message-erialization-deserialization/"/>
    <id>https://bingowith.me/2024/06/04/azure-openai-java-sdk-message-erialization-deserialization/</id>
    <published>2024-06-04T08:15:00.000Z</published>
    <updated>2024-06-05T04:57:00.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;有个功能需要在数据库中配置模板将用户输入填入占位符, 因为要配置多轮message以及各个参数,使用自己配置的方式会比较麻烦,就想着把&lt;code&gt;ChatCompletionsOptions&lt;/code&gt;整个序列化到数据库里,然后拿出来再填入占位符.&lt;br&gt;但是直接使用jackson会导致对于user的&lt;code&gt;ChatRequestUserMessage&lt;/code&gt;会序列化和反序列化都失败.  &lt;/p&gt;</summary>
    
    
    
    
    <category term="openai" scheme="https://bingowith.me/tags/openai/"/>
    
    <category term="azure" scheme="https://bingowith.me/tags/azure/"/>
    
    <category term="java" scheme="https://bingowith.me/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Shopify App订阅 APPLY_ON_NEXT_BILLING_CYCLE实在太坑了</title>
    <link href="https://bingowith.me/2024/03/08/shopify-app-subscription-apply-on-next-billing-cycle-sucks/"/>
    <id>https://bingowith.me/2024/03/08/shopify-app-subscription-apply-on-next-billing-cycle-sucks/</id>
    <published>2024-03-08T08:16:00.000Z</published>
    <updated>2024-03-08T08:16:00.000Z</updated>
    
    
    <summary type="html">&lt;h2 id=&quot;问题描述&quot;&gt;&lt;a href=&quot;#问题描述&quot; class=&quot;headerlink&quot; title=&quot;问题描述&quot;&gt;&lt;/a&gt;问题描述&lt;/h2&gt;&lt;p&gt;最近，我们在开发Shopify应用时，遇到了一个非常恼人的问题。我们希望允许商家降级他们当前的订阅计划，但是要求降级要在下一个计费周期才生效，当前的计划应该保持不变直到下一个计费周期。&lt;/p&gt;
&lt;p&gt;我们发现了Shopify的 &lt;code&gt;APPLY_ON_NEXT_BILLING_CYCLE&lt;/code&gt; 替换行为，本以为这就是我们想要的功能。但是，在测试时，我们发现当前的订阅立即被取消，降级后的订阅直接变成了 &lt;code&gt;ACTIVE&lt;/code&gt; 状态，而这个行为应该是在下一个计费周期才触发的。&lt;/p&gt;</summary>
    
    
    
    
    <category term="shopify" scheme="https://bingowith.me/tags/shopify/"/>
    
  </entry>
  
  <entry>
    <title>playwright 一些方法解决被cloudflare block的问题</title>
    <link href="https://bingowith.me/2024/02/01/playwright-cloudflare-bypass/"/>
    <id>https://bingowith.me/2024/02/01/playwright-cloudflare-bypass/</id>
    <published>2024-01-31T17:30:00.000Z</published>
    <updated>2024-01-31T16:30:00.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;在尝试从一个使用Cloudflare Web应用程序防火墙（WAF）保护的网站获取数据时,我遇到了一些挑战.该网站的安全措施非常严格,以至于在正常浏览几个页面后,Cloudflare的检查页面就会出现.&lt;/p&gt;
&lt;p&gt;传统的HTTP客户端方法,如直接使用httpclient来抓取页面数据,很快就会遭遇阻碍.&lt;/p&gt;
&lt;p&gt;即便尝试使用代理IP池,问题依旧存在,因为Cloudflare的检测机制能够在短时间内多次访问后迅速触发.在多次尝试后,我决定使用playwright这个自动化库来模拟正常的浏览器行为.&lt;/p&gt;
&lt;p&gt;虽然在使用playwright的过程中遇到了一些问题,但我最终找到了解决方案.现在,尽管速度稍慢,但我能够正常地从网站获取数据.接下来,我将分享如何克服这些挑战的经验.&lt;/p&gt;</summary>
    
    
    
    
    <category term="java" scheme="https://bingowith.me/tags/java/"/>
    
    <category term="playwright" scheme="https://bingowith.me/tags/playwright/"/>
    
  </entry>
  
  <entry>
    <title>docker container目录下log过大解决</title>
    <link href="https://bingowith.me/2024/01/27/docker-container-log-too-large/"/>
    <id>https://bingowith.me/2024/01/27/docker-container-log-too-large/</id>
    <published>2024-01-26T16:16:00.000Z</published>
    <updated>2024-01-26T16:16:00.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;现在和朋友一起搞点东西,部署都很简单,服务器上装个&lt;code&gt;docker&lt;/code&gt;,服务丢上去,写个docker compose配置就跑着.&lt;br&gt;有个服务最近流量涨的比较多,再加上有段时间没有部署,看服务器上的磁盘使用越来越多.  &lt;/p&gt;
&lt;p&gt;起初以为是应用的日志太多了,应用日志每天归档为gzip,保留60天,看了下并没有多少,用lsof检查也确认没有roll掉的被持有,再去容器内部看了下发现体积远没有这么大.  &lt;/p&gt;
&lt;p&gt;于是开始用&lt;code&gt;du --max-depth=1&lt;/code&gt; 检查发现是&lt;code&gt;/var/lib/docker/containers/&lt;/code&gt;目录, 再一看容器id就是这个服务, 再定位是&lt;code&gt;&amp;lt;container-id&amp;gt;-json.log &lt;/code&gt;文件.&lt;/p&gt;</summary>
    
    
    
    
    <category term="docker" scheme="https://bingowith.me/tags/docker/"/>
    
    <category term="docker compose" scheme="https://bingowith.me/tags/docker-compose/"/>
    
  </entry>
  
  <entry>
    <title>blazor maui hybrid app显示本地图片</title>
    <link href="https://bingowith.me/2023/12/25/blazor-maui-hybrid-app-display-local-image/"/>
    <id>https://bingowith.me/2023/12/25/blazor-maui-hybrid-app-display-local-image/</id>
    <published>2023-12-25T04:54:00.000Z</published>
    <updated>2023-12-25T04:54:00.000Z</updated>
    
    
    <summary type="html">&lt;p&gt;啊… …&lt;br&gt;一通操作下来感觉就是两个字 折磨&lt;br&gt;跨平台有跨平台的好处 但框架本身支持的有限 很多东西做起来很曲折 哎&lt;/p&gt;
&lt;p&gt;这里总结一下笔者为了折腾本地图片显示的尝试&lt;br&gt;为什么要做本地图片展示呢 如果是做需要网络连接的app 这个一般是不需要的(要做上传前预览&amp;#x2F;编辑的话还是要的)&lt;br&gt;但对于离线的app肯定是要的 总会有场景用户导入图片&amp;#x2F;文件之类的吧  &lt;/p&gt;
&lt;p&gt;笔者只测试了windows和安卓这两个平台,mac和iOS因为没有设备和开发者账号所以调试不了😀&lt;/p&gt;</summary>
    
    
    
    
    <category term="maui" scheme="https://bingowith.me/tags/maui/"/>
    
    <category term="blazor" scheme="https://bingowith.me/tags/blazor/"/>
    
    <category term="ASP.NET" scheme="https://bingowith.me/tags/ASP-NET/"/>
    
    <category term="C#" scheme="https://bingowith.me/tags/C/"/>
    
    <category term="dotnet" scheme="https://bingowith.me/tags/dotnet/"/>
    
  </entry>
  
</feed>
